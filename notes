core java:
``````````
what is java?

  java is object oriented programming language.
  
 why we need to learn this pl?
  python
  java
  .net
  c,cpp... 
   to develop the software application 
   
 java:
 
   1995 
   28 years ago
   james gosling -author 
   sunmicrosystem 
   
   popularity -> java has unique principles.
   
   
  oopl 

  using java, what kind of applications we can develop?

  
   ->desktop applications & webbased applications
   
   
   core java -> jse(java standard edition)
    -desktop applications.
	
	adv java ->jee(java enterprise edition)
	 -webbased applications.
	 
   1995 
   
    jamesgosling 
	
	 into three editions
	 
	 1.jse (core java) 2.jee(advanced java)
	 
	 
	jse:

oops princples
control statements
instance vs static 
class vs object
string manipulation 
collection framework
files concept
multithreading intro
exception handling 
lambda expression and stream api 
etc.. 
	
		
		
	 
	 

java is oopl

 ->what is oopl?
 
  xyz  -> oopl 
  
  it has to follow some principles
   oops princples.
   
   we have 4 oops principles.
   
   1.inheritance
   2.encapsulation 
   3.polymorphism 
   4.abstraction 
   

as a programmer what is our role?
 
  to write the program
  
  
  we have to follow some rules.
  
  syntaxes-language vendors 
  in case of java-> sunmicrosystem
  
  oracle corporation 
  (www.oracle.com)
  
  
 scjp -> sun certfied java programmer
 ocjp -> oracle certfied java programmer

 
syntaxes we have on each and every concept 

  class <classname>
  {
  }
  
     <datatype> <varaiblename>;
	 
	 <returntype> <methodname>()
	 {
	 }
	 

basic structure of java program?

   every java program should statt with by defining the class 
   only.
   
   how can we define the class?
    
	  syntax:
	  
    class <classname>
	{
	}

ex:
  class Student{
  }
  

we need to save it.
<filename>.java

   
  compile the java program 
  execute the java program 

  we require java software
  
  c program -> turbo c cpp -> turbo cpp 
  java program -> java software -> jdk (java development kit)
  
  
  java is opensource.
  
  www.oracle.com
  
  
  
  https://www.oracle.com/in/java/technologies/downloads/#jdk21-windows
  
  
  why should i compile the program ?
  
    java compiler is the predefined java program available in jdk. 
	
	 syntaxes are correct or not?
	 
	 
  if programmer is not following the syntaxes -> 
  compiler will give you errors.
  
  .java -> compiler -> generate -> .class file 
  
     java compiler will take .java file -> .class file 
	 jvm will take .class file -> machine level code 
	 
	 
  how can we compile the java program?
  
  open the command prompt.
  
    javac <filename>.java
	
how can i execute?

    java <classname>
	
	java Demo
	
  we have to define the main()
  because java program execution starts from main() method only.
  
  
  
  class Demo
{
	public static void main(String[] args)
	{
		//logic
		
		System.out.println("welcome to java sessions from techm");
    }
	
	
}


java is object oriented programming language.

  ->oops princples
  

in java, 

 1.class
 2.object
 
 class:
 
  class is the collection of variables and methods.
  
variable:

 purpose: store the data.
 
   or variable name of the memory location .
   
 <datatype> <variablename> = <value>;
 
 100
 
    int x =100;//invalid
	String y = "ram";
	boolean z = true;
	double d = 6.6;
	float f = 7.8f;
	char c = 'a';
	
	
method:

  method is the place where we are writing the logic.

  to perform some operation.

  
syntax:

   <returntype> <methodname>()
   {
      //logic
   }


   void display()
   {
     sysout();
   }

void =>it is not returning any value.

    String getFullName()
	{
	  return 10;//compile time error
	}

return type and return value must be same type. or compatible with 
each other.


     void getSum(int x, int y)
	 {
	   System.out.pritnln("sum is: " +(x+y));
	 }
   
   getSum(6,7);
   
   
     int getSum(int x, int y)
     {
          return x+y;
     } 
   
   int x = getSum(7,6);
   System.out.println(x); //13
   
 object:

 object is an instance of the class.

 instance: allocating sufficient amount of memory space for the variables
 which we are declaring inside the class. 
 
 syntax:
 
  <classname> <objectname>= new <classname>();
  
 ex:
   Demo obj = new Demo();
   
  
  class Demo
{
	//variable  intialization 
	
	 int x = 100;
	 String y = "Rama";
	 boolean b = false;
	 char c = 'a';
	 float f = 6.7f;
	 static String collegeName="jntu";
	 
	//method
	
	public void displayDetails()
	{
		
		System.out.println(x);
		System.out.println(y);
		System.out.println(b);
		System.out.println(c);
		System.out.println(f);
	}
	
	
	public static void main(String[] args)
	{
		
		//object creation 
		
		Demo obj = new Demo();
		//call displayDetails() from here
		
		obj.displayDetails();
		
    }
	
	
}

difference between static property and non-static(instance) property:


if a property is common it is recommended to declare that property 
as static. 

    
  from static area, if we want to access non-static properties using 
  object only it is possible 

  from static area, if we want to access static properties using 
  classname or directly it is possible.
  
  for static properties , object creation is not required
  because memory will be created for static properties at the time 
  of loading the class into main memory by classloader subsystem which 
  is the part of jvm.
  
  memory spaces will be created every time whenever we create the object.
  memory space will be creaetd only once for static properties.
  
  
 for a single classs, how many objects we can create?

  we can create multiple objects based on our requirement.
  
  
class Demo
{
	//variable  intialization 
	
	 int x = 100;
	 String y = "Rama";
	 boolean b = false;
	 char c = 'a';
	 float f = 6.7f;
	 static String collegeName="jntu";
	 
	 
	
	//method
	
	public void displayDetails()
	{
		
		System.out.println(x);
		System.out.println(y);
		System.out.println(b);
		System.out.println(c);
		System.out.println(f);
	}
	
	
	public static void main(String[] args)
	{
		//static area
		//object creation 
		
		Demo obj = new Demo();
		//call displayDetails() from here
		
		obj.displayDetails();
		
		System.out.println(obj.x);
		System.out.println(Demo.collegeName);
		
		
		Demo obj1 = new Demo();
		Demo obj2 = new Demo();
		
    }
	
	
}


constructor:
````````````













  
  
  
  
  
  
  
  
  
   